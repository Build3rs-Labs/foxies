import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Header2 from "../components/Header2";
import Image from "next/image";
import metadata from "../metadata/nft_contract.json";
import { ContractPromise } from "@polkadot/api-contract";
import { ApiPromise, WsProvider } from "@polkadot/api";
import { useTx, useContract, shouldDisable } from "useink";
import { pickDecoded } from "useink/utils";
import { InjectedAccountWithMeta } from "@polkadot/extension-inject/types";
import { useEffect, useState } from "react";

const Name = "Foxies";

export default function Coop() {
  const backgroundStyle = {
    backgroundSize: "cover",
    backgroundPosition: "center center",
    backgroundAttachment: "fixed",
    backgroundImage: 'url("/mint.jpg")',
    minHeight: "100vh",
  };

  const [data, setData] = useState<ApiPromise>();
  const [accounts, setAccounts] = useState<InjectedAccountWithMeta[]>([]);
  const [selectedAccount, setSelectedAccount] =
    useState<InjectedAccountWithMeta>();
  const contract = useContract(
    "5HSkTsVi5PWAVrLMgyKGzWAo6yY2aJuVrr5zm2QvGbBVSWJp",
    metadata
  );
  const sendTransaction = useTx(contract, "payableMint::mintToken");

  const connectToParachain = async () => {
    const wsProvider = new WsProvider("wss://ws.test.azero.dev");
    const api = await ApiPromise.create({ provider: wsProvider });
    setData(api);
  };
  const args = ["1"];

  const handleConnection = async () => {
    const { web3Accounts, web3Enable } = await import(
      "@polkadot/extension-dapp"
    );
    const extensions = await web3Enable(Name);
    if (!extensions) {
      throw Error("NO_EXTENSION");
    }

    const allAccounts = await web3Accounts();
    setAccounts(allAccounts);

    if (allAccounts.length === 1) {
      setSelectedAccount(allAccounts[0]);
    }
  };
  const handleMint = async () => {
    {
      /*    const { web3Accounts, web3Enable, web3FromAddress } = await import(
      "@polkadot/extension-dapp"
    );
    if (!data) return;

    if (!selectedAccount) return;

    const contract =  new ContractPromise(data, metadata, '5HSkTsVi5PWAVrLMgyKGzWAo6yY2aJuVrr5zm2QvGbBVSWJp');
   
    console.log(contract);
    await contract.tx.payableMint.mint_token(1, "TZERO").signAndSend(selectedAccount.address, {
        signer: injector.signer,
      });
      */
    }
  };

  useEffect(() => {
    connectToParachain();
  }, []);

  useEffect(() => {
    if (!data) return;

    async () => {
      const time = await data.query.timestamp.now();
      console.log(time);
    };
  }, [data]);

  return (
    <>
      <Head>
        <title>Crypto</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div style={backgroundStyle} className="brightness-50 "></div>
        <Header2 />
        <div className="absolute z-40 w-full h-full top-0">
          <h1 className="pt-20 font-VT323 text-white text-7xl text-center">
            You're in the coop !
          </h1>

          <div className="pt-28 grid grid-cols-1 md:grid-cols-3 lg:grid-flow-row gap-6 font-VT323 text-white text-5xl mx-16 leading-10">
            <div className="p-4">
              You own X chickens.
              <p className="pt-12">
                Stake your NFTs to earn delicious $EGGS rewards.
              </p>
            </div>
            <div className=" p-4 text-center	">
              You own X foxes.
              <p className="pt-12">
                Stake your NFTs to try to steal the precious $EGGS
              </p>
              {/*   <button className=" border-2 border-black bg-white rounded-full text-xl text-black px-12 flex items-center">
                MINT
              </button> */}
            </div>
            <div className="p-4 text-center">
              {accounts.length === 0 ? (
                <button
                  onClick={handleConnection}
                  className="border-2	border-white	rounded-full font-VT323 text-2xl text-white px-4 py-1"
                >
                  Connect Wallet
                </button>
              ) : (
                <button
                  onClick={() => sendTransaction.signAndSend()}
                  className="border-2	border-white	rounded-full font-VT323 text-2xl text-white px-4 py-1"
                >
                  MINT
                </button>
              )}
              Must read before staking !
              <Image
                className="mx-auto"
                src="/book.png"
                width={160}
                height={160}
              />
              <p className="py-8">
                Your $EGGS balance : <br />
                77812,123 $EGGS
              </p>
              <Image
                className="mx-auto"
                src="/egg.png"
                width={140}
                height={140}
              />
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
